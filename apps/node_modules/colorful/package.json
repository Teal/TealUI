{
  "name": "colorful",
  "version": "1.1.2",
  "description": "colorful if a terminal tool for color, logging and command",
  "keywords": [
    "color",
    "logging",
    "console",
    "terminal",
    "command"
  ],
  "author": {
    "name": "Hsiaoming Yang",
    "email": "lepture@me.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/lepture/colorful.git"
  },
  "devDependencies": {
    "jshint": "*",
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "make test"
  },
  "readme": "# Colorful\n\nIt's not just color, it's everything colorful in terminal.\n\n---------------------\n\n# Color\n\nColor in terminal and only terminal.\n\n## Programmer\n\nAs a programmer, you think they are functions:\n\n```javascript\nvar color = require('colorful').color\ncolor.red('hello')\ncolor.underline('hello')\ncolor.red(color.underline('hello'))\n```\n\n## Human\n\nAs a human, you think you are a painter:\n\n```javascript\nvar paint = require('colorful').paint\npaint('hello').red.color\npaint('hello').bold.underline.red.color\n```\n\n**WTF**, is bold, underline a color? If you don't like the idea, try:\n\n```javascript\npaint('hello').bold.underline.red.style\n```\n\n## Alien\n\nAs an alien, you are from outer space, you think it should be:\n\n```javascript\nrequire('colorful').colorful()\n'hello'.to.red.color\n'hello'.to.underline.bold.red.color\n'hello'.to.underline.bold.red.style\n```\n\n## Detective\n\nAs a detective, you think we should detect if color is supported:\n\n```javascript\nrequire('colorful').isSupported\n```\n\n------\n\n# Logging\n\nColorful and nested logging in terminal.\n\n[![nico](http://lab.lepture.com/nico/nico-look.png)](http://lab.lepture.com/nico/)\n\n## Favorite\n\nDefault is my favorite, we should do nothing:\n\n```javascript\nvar logging = require('colorful').logging;\n// start a nested logging\nlogging.start('Start Application')\nlogging.info('send an info message')\n\n// start another nested logging\nlogging.start('Start subprocess')\nlogging.warn('send a warn message')\nlogging.end('End subprocess')\n\nlogging.error('send an error message')\nlogging.debug('send a debug message')\nlogging.end('End Application')\n```\n\n## Config\n\nI want to show debug message:\n\n```javascript\nlogging.config('debug')\n// or\nlogging.config({level: 'debug'})\nlogging.config({verbose: true})\n```\n\n## Customize\n",
  "_id": "colorful@1.1.2",
  "dist": {
    "shasum": "894296cb2733206978c64052ac0b1fe22480a3c6"
  },
  "_from": "colorful"
}
