#!/usr/bin/env node

var path = require('path');
var fs = require('fs');
var child_process = require('child_process');


var commander = require('commander');
var program = require('colorful').program;
require('colorful').colorful();
var plugin = require('../lib/system/plugin');
var config = require('../lib/system/config');
var spm = require('../lib/spm');
var spawn = require('../lib/utils').spawn;


commander.helpInformation = function() {
  // register extentions
  plugin.blockCall('registerCommand');
  return [
    '',
    ' ' + 'â™¨'.to.cyan.color + ' ' + 'Static Package Manager'.to.bold.color,
    '',
    ' Usage: ' + this._name + ' ' + this.usage(),
    '' + this.commandHelp(),
    ' Options:',
    '',
    '' + this.optionHelp().replace(/^/gm, ' '),
    '',
    ''
  ].join('\n');
};

commander
  .version(spm.version)
  .usage('<command> [options]');


// sub command help
commander.on('--help', function() {
  console.log(' ' + 'System Commands:'.to.bold.magenta.color);
  console.log();
  program.printHelp(new program.Command('plugin', plugin.description));
  program.printHelp(new program.Command('config', config.description));
  console.log();

  var files = fs.readdirSync(path.join(__dirname, '..', 'lib', 'builtin'));
  console.log(' ' + 'Builtin Commands:'.to.bold.green.color);
  console.log();
  files.toString().split(',').forEach(function(f) {
    var name = f.replace('.js', '');
    var module = require('../lib/builtin/' + name);
    program.printHelp(new program.Command(name, module.description));
  });
  console.log();

  var extensions = spm.extensionCommands();
  if (extensions.length) {
    console.log();
    console.log(' ' + 'Plugin Commands:'.to.bold.blue.color);
    console.log();
    extensions.forEach(function(cmd) {
      program.printHelp(cmd);
    });
  }
  console.log();
});

commander.parse(process.argv);

var args = process.argv.slice(3);
var subcmd = commander.args[0];

if (!subcmd) {
  process.stdout.write(commander.helpInformation());
  commander.emit('--help');
  process.exit();
}

if (subcmd == 'help') {
  var helpcmd = commander.args[1];
  if (!helpcmd) {
    process.stdout.write(commander.helpInformation());
    commander.emit('--help');
    process.exit();
  }

  var bin = executable(helpcmd);
  if (bin) {
    child_process.exec(bin + ' --help', function(err, stdout) {
      if (err) {
        throw err;
      }
      process.stdout.write(stdout);
    });
  }
} else {
  var bin = executable(subcmd);
  if (bin) {
    spawn(bin, args, {stdio: 'inherit', customFds: [0, 1, 2]});
  }
}


// helpers
// ----------
function executable(subcmd) {
  // find executable
  var bin = 'spm-' + subcmd;

  var local = path.join(__dirname, bin);
  if (fs.existsSync(local)) {
    return local;
  }

  // register extentions
  plugin.blockCall('registerCommand');
  var extensions = spm.extensionCommands();
  for (var i = 0; i < extensions.length; i++) {
    var cmd = extensions[i];
    if (subcmd === cmd.name) return cmd.executable;
  }
  console.log();
  console.log((" Can't find command: " + subcmd).to.red.color);
  console.log();
  return null;
}