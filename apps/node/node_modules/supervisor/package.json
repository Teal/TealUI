{
  "name": "supervisor",
  "version": "0.5.2",
  "description": "A supervisor program for running nodejs programs",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me"
  },
  "contributors": [
    {
      "name": "Todd Branchflower",
      "email": "toddbran@stanford.edu"
    },
    {
      "name": "Giannis Dzegoutanis",
      "email": "erasmospunk@gmail.com"
    },
    {
      "name": "Brian Ehmann",
      "email": "behmann@gmail.com"
    },
    {
      "name": "Corey Jewett",
      "email": "cj@syntheticplayground.com"
    },
    {
      "name": "Taka Kojima",
      "email": "taka.kojima@ff0000.com"
    },
    {
      "name": "Aneil Mallavarapu",
      "email": "aneil@blipboard.com"
    },
    {
      "name": "David Murdoch",
      "email": "hello@davidmurdoch.com"
    },
    {
      "name": "Jonathan 'Wolf' Rentzsch",
      "email": "jwr.git@redshed.net"
    },
    {
      "name": "John Roberts",
      "email": "jroberts@logitech.com"
    },
    {
      "name": "Scott Sanders",
      "email": "scott@stonecobra.com"
    },
    {
      "name": "Fernando H. Silva",
      "email": "ferhensil@gmail.com"
    },
    {
      "name": "Kei Son",
      "email": "heyacct@gmail.com"
    },
    {
      "name": "David Taylor",
      "email": "david@zensatellite.com"
    },
    {
      "name": "Antonio TouriÃ±o",
      "email": "atourino@gmail.com"
    },
    {
      "name": "Oliver Wong",
      "email": "oliver@owiber.com"
    },
    {
      "name": "Di Wu",
      "email": "dwu@palantir.com"
    },
    {
      "name": "Ian Young",
      "email": "ian.greenleaf@gmail.com"
    },
    {
      "name": "jazzzz",
      "email": "jazzzz@gmail.com"
    },
    {
      "name": "rma4ok",
      "email": "rma4ok@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/node-supervisor.git"
  },
  "bugs": "https://github.com/isaacs/node-supervisor/issues",
  "homepage": "https://github.com/isaacs/node-supervisor/",
  "main": "lib/supervisor.js",
  "bin": {
    "node-supervisor": "lib/cli-wrapper.js",
    "supervisor": "lib/cli-wrapper.js"
  },
  "engines": {
    "node": ">=0.3.7"
  },
  "preferGlobal": true,
  "readme": "# node-supervisor\n\nA little supervisor script for nodejs. It runs your program, and\nwatches for code changes, so you can have hot-code reloading-ish\nbehavior, without worrying about memory leaks and making sure you\nclean up all the inter-module references, and without a whole new\n`require` system.\n\n## node-supervisor -?\n\n\n    Node Supervisor is used to restart programs when they crash.\n    It can also be used to restart programs when a *.js file changes.\n\n    Usage:\n      supervisor [options] <program>\n      supervisor [options] -- <program> [args ...]\n\n    Required:\n      <program>\n        The program to run.\n\n    Options:\n      -w|--watch <watchItems>\n        A comma-delimited list of folders or js files to watch for changes.\n        When a change to a js file occurs, reload the program\n        Default is '.'\n\n      -i|--ignore <ignoreItems>\n        A comma-delimited list of folders to ignore for changes.\n        No default\n\n      -p|--poll-interval <milliseconds>\n        How often to poll watched files for changes.\n        Defaults to Node default.\n\n      -e|--extensions <extensions>\n        Specific file extensions to watch in addition to defaults.\n        Used when --watch option includes folders\n        Default is 'node|js'\n\n      -x|--exec <executable>\n        The executable that runs the specified program.\n        Default is 'node'\n\n      --debug\n        Start node with --debug flag.\n\n      --debug-brk\n        Start node with --debug-brk flag.\n\n      -n|--no-restart-on error|exit\n        Don't automatically restart the supervised program if it ends.\n        Supervisor will wait for a change in the source files.\n        If \"error\", an exit code of 0 will still restart.\n        If \"exit\", no restart regardless of exit code.\n\n      -h|--help|-?\n        Display these usage instructions.\n\n      -q|--quiet\n        Suppress DEBUG messages\n\n    Examples:\n      supervisor myapp.js\n      supervisor myapp.coffee\n      supervisor -w scripts -e myext -x myrunner myapp\n      supervisor -w lib,server.js,config.js server.js\n      supervisor -- server.js -h host -p port\n\n\n## Simple Install\n\nInstall npm, and then do this:\n\n    npm install supervisor -g\n\nYou don't even need to download or fork this repo at all.\n\n## Fancy Install\n\nGet this code, install npm, and then do this:\n\n    npm link\n\n## todo\n\n1. Re-attach to a process by pid. If the supervisor is\nbackgrounded, and then disowned, the child will keep running. At\nthat point, the supervisor may be killed, but the child will keep\non running. It'd be nice to have two supervisors that kept each\nother up, and could also perhaps run a child program.\n2. Run more types of programs than just \"node blargh.js\".\n3. Be able to run more than one program, so that you can have two\nsupervisors supervise each other, and then also keep some child\nserver up.\n4. When watching, it'd be good to perhaps bring up a new child\nand then kill the old one gently, rather than just crashing the\nchild abruptly.\n5. Keep the pid in a safe place, so another supervisor can pull\nit out if told to supervise the same program.\n6. It'd be pretty cool if this program could be run just like\ndoing `node blah.js`, but could somehow \"know\" which files had\nbeen loaded, and restart whenever a touched file changes.\n",
  "readmeFilename": "README.md",
  "_id": "supervisor@0.5.2",
  "dist": {
    "shasum": "8c9f7daadce0a9f6c9acf9a4868fe4b7b108c10d"
  },
  "_from": "supervisor@0.5.2",
  "_resolved": "https://registry.npmjs.org/supervisor/-/supervisor-0.5.2.tgz"
}
