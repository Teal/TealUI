#!/usr/bin/env node

var path = require('path'),
    fs = require('fs'),
    sys = require('util'),
    os = require('os');

var cssCombo = require('../lib/index');
var args = process.argv.slice(1);
var options = {
    compress: false,
    silent: true,
    paths: [],
    verbose: false,
    inputCharset: 'gbk',
    outputCharset: 'gbk'
};

args = args.filter(function (arg) {
    var match,
        argValue;

    if (match = arg.match(/^-I(.+)$/)) {
        options.paths.push(match[1]);
        return false;
    }

    if (match = arg.match(/^--?([a-z][0-9a-z-]*)(?:=([^\s]+))?$/i)) {
        arg = match[1];
        argValue = match[2];
    } else {
        return arg;
    }

    switch (arg) {
        case 'v':
        case 'version':
            sys.puts("csscombo v" + cssCombo.version + " (CSS Module Compiler) [NodeJS]");
            process.exit(0);
        case 'verbose':
            options.verbose = true;
            break;
        case 's':
        case 'silent':
            options.silent = true;
            break;
        case 'h':
        case 'help':
            sys.puts("usage: csscombo source [destination]");
            process.exit(0);
        case 'x':
        case 'compress':
            options.compress = true;
            break;
        case 'inputCharset':
        case 'ic':
            options.inputCharset = argValue;
            break;
        case 'outputCharset':
        case 'oc':
            options.outputCharset = argValue;
            break;
    }
});

var input = args[1];
if (input && input != '-') {
    input = path.resolve(process.cwd(), input);
}
var output = args[2];
if (output) {
    output = path.resolve(process.cwd(), output);
}

if (! input) {
    sys.puts("csscombo: no input files");
    process.exit(1);
}

if (input != '-') {
    cssCombo.build({
        target: input,
        output: output,
        debug: options.verbose,
        inputCharset: options.inputCharset,
        outputCharset: options.outputCharset,
        silent: options.verbose ? false : options.silent,
        compress: options.compress
    }, function(err){
        if(err){
            sys.puts('csscombo: ' + err);
            process.exit(1);
        }else{
            sys.puts('csscombo: success ' + input + ' ===> ' + output);
            process.exit(0);
        }
    });
} else {
    sys.puts('csscombo: cannot find input file.');
    process.exit(1);
}
